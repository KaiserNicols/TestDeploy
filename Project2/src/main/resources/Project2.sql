-------------------------------------------------------------------------------
-- TABLES
-------------------------------------------------------------------------------
CREATE TABLE IMDB_USER
(
    U_ID NUMBER NOT NULL,
    U_USERNAME VARCHAR2(50) NOT NULL,
    U_PASSWORD VARCHAR2(50) NOT NULL,
    U_EMAIL VARCHAR2(50) NOT NULL,
    U_FIRSTNAME VARCHAR2(50) NOT NULL,
    U_LASTNAME VARCHAR2(50) NOT NULL,
    CONSTRAINT PK_U_ID PRIMARY KEY (U_ID),
    CONSTRAINT UNQ_U_USERNAME UNIQUE (U_USERNAME)
);

DROP TABLE IMDB_RECOMMENDATION;

CREATE TABLE IMDB_RECOMMENDATION
(
    R_ID NUMBER NOT NULL,
    U_ID NUMBER NOT NULL,
    M_ID NUMBER NOT NULL,
    R_HELPFUL CHAR(1) NOT NULL,
    R_DATE VARCHAR2(50) NOT NULL,
    CONSTRAINT PK_R_ID PRIMARY KEY (R_ID),
    CONSTRAINT FK_U_ID FOREIGN KEY (U_ID) REFERENCES IMDB_USER(U_ID)
);

SELECT * FROM IMDB_RECOMMENDATION WHERE U_ID = 0 AND M_ID = 0 AND R_DATE = 'aaa';

DELETE FROM IMDB_USER WHERE U_ID = 42;

SELECT * FROM IMDB_USER;
SELECT * FROM IMDB_RECOMMENDATION;

INSERT INTO IMDB_USER VALUES(0, 'admin', 'CBB5650EFFC730AD4BFAE5CFD50E6340', 'admin@admin.admin', 'admin', 'admin');
--UPDATE PLAYER SET P_PASSWORD = 'CBB5650EFFC730AD4BFAE5CFD50E6340' WHERE P_ID = 0;

--INSERT INTO GAME VALUES(0, 'TWENTY_QUESTIONS', 'TWENTY_QUESTIONS');
--SELECT * FROM GAME_SESSION WHERE P_ID = 1 AND G_ID = 1 AND GS_Date = '';

EXEC DELETE_ALL_USER;
--EXEC DELETE_ALL_GAME;
--EXEC DELETE_ALL_GAME_SESSION;

SELECT GET_USER_HASH('admin', 'admin') FROM dual;
commit;
-------------------------------------------------------------------------------
-- SEQUENCERS
-------------------------------------------------------------------------------

DROP SEQUENCE PLAYER_SEQ;

CREATE SEQUENCE USER_SEQ
    START WITH 1
    INCREMENT BY 1;
    
CREATE SEQUENCE RECOMMENDATION_SEQ
    START WITH 1
    INCREMENT BY 1;
    
-------------------------------------------------------------------------------
-- STORED PROCEDURES
-------------------------------------------------------------------------------

-- YUVI's - HASHING FUNCTION THAT COMBINES USERNAME, PASSWORD AND A SPECIAL WORD
CREATE OR REPLACE FUNCTION GET_USER_HASH(USERNAME VARCHAR2, PASSWORD VARCHAR2) RETURN VARCHAR2
IS
EXTRA VARCHAR2(10) := 'SALT';
BEGIN
  RETURN TO_CHAR(DBMS_OBFUSCATION_TOOLKIT.MD5(
  INPUT => UTL_I18N.STRING_TO_RAW(DATA => USERNAME || PASSWORD || EXTRA)));
END;
/

CREATE OR REPLACE PROCEDURE DELETE_ALL_USER
AS
BEGIN
    DELETE FROM (SELECT * FROM IMDB_USER);
end;
/

CREATE OR REPLACE PROCEDURE DELETE_ALL_RECOMMENDATION
AS
BEGIN
    DELETE FROM (SELECT * FROM IMDB_RECOMMENDATION);
end;
/

-------------------------------------------------------------------------------
-- TRIGGERS
-------------------------------------------------------------------------------
    
DROP TRIGGER PLAYER_B_INSERT;
    
CREATE OR REPLACE TRIGGER USER_B_INSERT
BEFORE INSERT ON IMDB_USER FOR EACH ROW
BEGIN
  -- INCREASE THE SEQUENCE
  IF :NEW.U_ID IS NULL THEN
    SELECT USER_SEQ.NEXTVAL INTO :NEW.U_ID FROM DUAL;
  END IF;
END;
/

CREATE OR REPLACE TRIGGER RECOMMENDATION_B_INSERT
BEFORE INSERT ON IMDB_RECOMMENDATION FOR EACH ROW
BEGIN
  -- INCREASE THE SEQUENCE
  IF :NEW.R_ID IS NULL THEN
    SELECT RECOMMENDATION_SEQ.NEXTVAL INTO :NEW.R_ID FROM DUAL;
  END IF;
END;
/
 
-------------------------------------------------------------------------------
-- SYNONYMS
-------------------------------------------------------------------------------

CREATE OR REPLACE PUBLIC SYNONYM IMDB_USER FOR admin.IMDB_USER;
CREATE OR REPLACE PUBLIC SYNONYM IMDB_RECOMMENDATION FOR admin.IMDB_RECOMMENDATION;
CREATE OR REPLACE PUBLIC SYNONYM USER_SEQ FOR admin.USER_SEQ;
CREATE OR REPLACE PUBLIC SYNONYM RECOMMENDATION_SEQ FOR admin.RECOMMENDATION_SEQ;
CREATE OR REPLACE PUBLIC SYNONYM DELETE_ALL_USER FOR admin.DELETE_ALL_USER;
CREATE OR REPLACE PUBLIC SYNONYM DELETE_ALL_RECOMMENDATION FOR admin.DELETE_ALL_RECOMMENDATION;
CREATE OR REPLACE PUBLIC SYNONYM USER_B_INSERT FOR admin.USER_B_INSERT;
CREATE OR REPLACE PUBLIC SYNONYM RECOMMENDATION_B_INSERT FOR admin.RECOMMENDATION_B_INSERT;